name: Deploy Flutter Web to GitHub Pages

on:
  push:
    branches:
      - main  # Trigger on pushes to main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: false  # Disable cache to ensure fresh build

      - name: Install Dependencies
        run: flutter pub get

      - name: Clean Flutter 
        run: flutter clean

      - name: Build for Web
        run: flutter build web

      - name: Hardcode base href for GitHub Pages
        run: |
          # Hardcode the base href to the repository name
          BASE_HREF="/tango_ai_companion/"
          echo "Setting base href to: $BASE_HREF"
          # Update the base href in the index.html file to the hardcoded value
          sed -i "s|<base href=\"/\">|<base href=\"$BASE_HREF\">|g" build/web/index.html
          
      - name: Create 404.html for SPA routing
        run: |
          # Create a 404.html that redirects to index.html with the original path
          cat > build/web/404.html << 'EOL'
          <!DOCTYPE html>
          <html>
            <head>
              <meta charset="utf-8">
              <title>Tango AI Companion</title>
              <script type="text/javascript">
                // Single Page Apps for GitHub Pages
                // MIT License
                // https://github.com/rafgraph/spa-github-pages
                var segmentCount = 1;
                var l = window.location;
                l.replace(
                  l.protocol + '//' + l.hostname + (l.port ? ':' + l.port : '') +
                  l.pathname.split('/').slice(0, 1 + segmentCount).join('/') + '/?p=/' +
                  l.pathname.slice(1).split('/').slice(segmentCount).join('/').replace(/&/g, '~and~') +
                  (l.search ? '&q=' + l.search.slice(1).replace(/&/g, '~and~') : '') +
                  l.hash
                );
              </script>
            </head>
            <body>
              Redirecting...
            </body>
          </html>
          EOL
          
      - name: Update index.html for SPA routing
        run: |
          # Add SPA route handling script to index.html
          sed -i '/<head>/a \
          <!-- Start Single Page Apps for GitHub Pages -->\
          <script type="text/javascript">\
            // Single Page Apps for GitHub Pages\
            // MIT License\
            // https://github.com/rafgraph/spa-github-pages\
            (function(l) {\
              if (l.search[1] === "/" ) {\
                var decoded = l.search.slice(1).split("&").map(function(s) { \
                  return s.replace(/~and~/g, "&")\
                }).join("?");\
                window.history.replaceState(null, null,\
                    l.pathname.slice(0, -1) + decoded + l.hash\
                );\
              }\
            }(window.location))\
          </script>\
          <!-- End Single Page Apps for GitHub Pages -->' build/web/index.html

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'build/web'
          
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
